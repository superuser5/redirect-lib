global
 log 127.0.0.1 local2 debug
 maxconn 2000
 user haproxy
 group haproxy

defaults
 log     global
 mode    http
 #option  httplog
 option  dontlognull
 retries 3
 option redispatch
 timeout connect  5000
 timeout client  10000
 timeout server  10000
 # exact log-format setup is important for RedELK!
 log-format "GMT:%T frontend:%f/%H/%fi:%fp backend:%b client:%ci:%cp xforwardedfor:%[capture.req.hdr(3)] headers:%hr statuscode:%ST request:%r"

# frontend name can be whatever you like
#frontend www-https
# option http-buffer-request
# declare capture request len 40000
# capture request header User-Agent len 512
# capture request header Host len 512
# capture request header X-Forwarded-For len 512
# capture request header X-Forwarded-Proto len 512
# capture request header X-Host len 512
# capture request header Forwarded len 512
# capture request header Via len 512
# log /dev/log local2 debug
# bind :::{{ listenning_port_https }} v4v6 ssl crt /etc/letsencrypt/live/haproxy.pem
# reqadd X-Forwarded-Proto:\ https
# acl path_cs path -m beg /dpixel
# acl path_cs path -m beg /submit.php
# acl path_cs path -m beg /TRAINING-BEACON
# acl path_cs path_reg  ^/[0-z][0-z][0-z][0-z]$
# use_backend c2-https if path_cs
# default_backend decoy-www
# timeout client 1m

# frontend name can be whatever you like
frontend www-http
 mode http
 option http-buffer-request
 declare capture request len 40000
 capture request header User-Agent len 512
 capture request header Host len 512
 capture request header X-Forwarded-For len 512
 capture request header X-Forwarded-Proto len 512
 capture request header X-Host len 512
 capture request header Forwarded len 512
 capture request header Via len 512
 log /dev/log local2 debug
 bind :::{{ listenning_port_http }} v4v6
 reqadd X-Forwarded-Proto:\ http
 acl path_cs path -m beg /dpixel
 acl path_cs path -m beg /submit.php
 acl path_cs path -m beg /TRAINING-BEACON
 acl path_cs path_reg  ^/[0-z][0-z][0-z][0-z]$
 use_backend c2-http if path_cs
 default_backend decoy-www
 timeout client 1m

# backend name should start with decoy or with c2
backend decoy-staticerror
 mode http
 http-request set-header Host 127.0.0.1
 server 127.0.0.1 127.0.0.1:8070

# backend name should start with decoy or with c2
backend c2-https
 # Insert X-Forwarded-For header to have Cobalt Strike display the proper IP address of target. Uncomment if you want this funcitonality
 # Remark: when using Domain Fronting/CDNs, this needs to be commented out as Cobalt Strike does not understand a double inserted X-Forwarded-For header: it will display the IP of the CDN endpoint
 #option forwardfor
 server teamserver {{ c2_ip }}:{{ c2_port_https }} check ssl verify none

# backend name should start with decoy or with c2
backend c2-http
 #option forwardfor
 server teamserver {{ c2_ip }}:{{ c2_port_http }}
